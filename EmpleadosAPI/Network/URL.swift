//
//  URL.swift
//  EmpleadosAPI
//
//  Created by Rub칠n Segura Romo on 6/12/24.
//

import Foundation

// Las definiciones de URL's a las que vamos a acceder desde la aplicaci칩n

/// URL de producci칩n del API de Empleados
let prod = URL(string: "https://acacademy-employees-api.herokuapp.com/api")!
/// URL de desarrollo del API de Empleados
let desa = URL(string: "http://localhost:8080/api")

#if DEBUG
let api = prod // lo dejo en prod porque no tengo el api en local 游땴
#else
let api = prod
#endif

// Extensi칩n para crear todas las URL's usar en la aplicaci칩n de manera est치tica
// Combina la extensi칩n de URLQueryItem con las funciones de URL para construir URLs limpias y f치cilmente configurables.
// Ejemplo de uso: URLSession.shared.data(from: .getEmpleados)
extension URL {
    /// Propiedad que devuelve una URL para buscar todos los empleados del API Empleados
    static let getEmpleados = api.appending(path: "getEmpleados")
    /// Funci칩n que devuelve una URL configurada para buscar un empleado con un par치metro id
    static func getEmplead(id: Int) -> URL {
        api.appending(path: "getEmpleado").appending(path: "\(id)")
    }
    /// Funci칩n que devuelve una URL configurada para buscar empleados con un par치metro de consulta search.
    static func searchEmpleados(_ search: String) -> URL {
        api.appending(path: "searchEmpleados").appending(queryItems: [.search(search)])
    }
}
// URLQueryItem es: Es una estructura que representa un par clave-valor que se usa en la parte de consulta de una URL.
// Por ejemplo, en https://api.example.com?search=empleados, search=empleados es un URLQueryItem
// donde name es search y value es empleados.
extension URLQueryItem {
    /// M칠todo est치tico que extiende a URLQueryItem donde el nombre del par치metro siempre ser치 "search"
    /// y al que solo habr치 que pasarle el valor de b칰squeda
    static func search(_ search: String) -> URLQueryItem {
        URLQueryItem(name: "search", value: search)
    }
}

